@page "/"
@using ExoticHistoricSites.Shared.Models
@inject HttpClient Http

<PageTitle>Exotic Historic Sites</PageTitle>

<div class="container">
    <h1 class="text-center mb-4">Explore Historic Sites</h1>
    
    @if (_sites == null)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (_sites.Count == 0)
    {
        <div class="alert alert-info" role="alert">
            No historic sites found.
        </div>
    }
    else
    {
        <SiteMap Sites="@_sites" />
        
        <div class="row mt-4">
            <div class="col">
                <h2>Featured Sites</h2>
                <div class="row row-cols-1 row-cols-md-3 g-4">
                    @foreach (var site in _sites.Take(3))
                    {
                        <div class="col">
                            <div class="card h-100">
                                @if (!string.IsNullOrEmpty(site.MainImageBase64))
                                {
                                    <img src="data:image/jpeg;base64,@site.MainImageBase64" 
                                         class="card-img-top" 
                                         alt="@site.Name" />
                                }
                                <div class="card-body">
                                    <h5 class="card-title">@site.Name</h5>
                                    <p class="card-text">@site.Countries</p>
                                    <a href="/site/@site.Id" class="btn btn-primary">View Details</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<HistoricSite>? _sites;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _sites = await Http.GetFromJsonAsync<List<HistoricSite>>("api/historicsites");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading sites: {ex.Message}");
            _sites = new List<HistoricSite>();
        }
    }
}